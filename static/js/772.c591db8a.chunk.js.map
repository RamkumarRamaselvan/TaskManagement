{"version":3,"file":"static/js/772.c591db8a.chunk.js","mappings":"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","sources":["app/helper.js","app/mockData.js","Component/SelectDropDown/customDropDown.js","pages/createNew.js","Component/Modal/modal.js","Component/Table/table.js","pages/taskManagement.js"],"sourcesContent":["export const getDate = () => {\r\n    const currentDate = new Date();\r\n    const day = String(currentDate.getDate()).padStart(2, \"0\");\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, \"0\");\r\n    const year = currentDate.getFullYear();\r\n\r\n    const hours = String(currentDate.getHours()).padStart(2, \"0\");\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, \"0\");\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, \"0\");\r\n    const formattedDateTime = `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\r\n\r\n    return formattedDateTime;\r\n\r\n}\r\nexport const allowNumericOnly = (e) => {\r\n    const code = \"charCode\" in e ? e.charCode : e.keyCode;\r\n    if (!(code >= 48 && code <= 57)) {\r\n      e.preventDefault();\r\n    }\r\n}","export const statusOption = [\r\n    {\r\n        \"label\": \"Pending\",\r\n        \"value\": \"Pending\"\r\n    },\r\n    {\r\n        \"label\": \"In Progress\",\r\n        \"value\": \"In Progress\"\r\n    },\r\n    {\r\n        \"label\": \"Completed\",\r\n        \"value\": \"Completed\"\r\n    }\r\n]\r\nexport const registerInput = [\r\n    {\r\n        name:\"firstName\",\r\n        lable:\"First Name\",\r\n        type:\"text\",\r\n    },\r\n    {\r\n        name:\"lastName\",\r\n        lable:\"Last Name\",\r\n        type:\"text\",\r\n    },\r\n    {\r\n        name:\"username\",\r\n        lable:\"Username\",\r\n        type:\"text\",\r\n    },\r\n    {\r\n        name:\"password\",\r\n        lable:\"Password\",\r\n        type:\"password\",\r\n    },\r\n    {\r\n        name:\"email\",\r\n        lable:\"Email\",\r\n        type:\"text\",\r\n    },\r\n    {\r\n        name:\"mobile\",\r\n        lable:\"Mobile Number\",\r\n        type:\"tel\",\r\n    }\r\n]\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nconst CustomDropDown = (props) => {\r\n    const {\r\n        label,\r\n        option,\r\n        name,\r\n        id,\r\n        value,\r\n        onChange,\r\n        customlabelClassName\r\n    } = props;\r\n    return (\r\n        <section className=\"mb-10\">\r\n            {label && <label className={customlabelClassName}>{label}</label>}\r\n            <Form.Select name={name} id={id} value={value} onChange={onChange}>\r\n            {option?.map((data,optionIndex)=>{\r\n                return (\r\n                    <option key={optionIndex} value={data.value}>{data.label}</option>\r\n                )\r\n            })}\r\n        </Form.Select>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomDropDown;","import React, { useEffect, useState } from \"react\";\r\nimport Input from \"../Component/input.js\";\r\nimport CustomDropDown from \"../Component/SelectDropDown/customDropDown.js\";\r\nimport { statusOption } from '../app/mockData.js';\r\nimport { getDate } from \"../app/helper.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nconst CreateTask = (props) => {\r\n    const packageJson = require('../../package.json');\r\n    const proxy = packageJson.proxy;\r\n    const { closeBtnFuc, actionType, getData, listAPICall } = props;\r\n    const {username} = JSON.parse(localStorage.getItem(\"userDetails\")) || {};\r\n    const registerUser = JSON.parse(localStorage.getItem(\"registerUser\")) || [];\r\n\r\n    const assigneeOption = registerUser?.map((data)=>{\r\n        return {label:data.username,\r\n             value:data.username\r\n         }\r\n     });\r\n    const [state, setState] = useState({\r\n        \"taskName\": \"\",\r\n        \"assignee\": assigneeOption[0]?.value || \"\",\r\n        \"status\": statusOption[0]?.value || \"\",\r\n    });\r\n    const [error, setError] = useState({\r\n        \"taskName\": { error: false, msg: \"\" },\r\n    });\r\n    console.log(assigneeOption);\r\n    useEffect(() => {\r\n        if (getData) {\r\n            setState((prevState) => ({\r\n                ...prevState,\r\n                \"taskName\": getData?.taskName,\r\n                \"assignee\": getData?.assignee,\r\n                \"status\": getData?.status,\r\n            }))\r\n        }\r\n    }, [getData]);\r\n    const handleOnChange = (name, value) => {\r\n        setState((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }))\r\n        setError((error) => ({\r\n            ...error,\r\n            [name]: { error: false, msg: \"\" },\r\n        }));\r\n    }\r\n    const handleOnDropChange = (name, value) => {\r\n        setState((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }))\r\n    }\r\n    const validate = () => {\r\n        let valid = true;\r\n        if (state.taskName == \"\") {\r\n            setError((error) => ({\r\n                ...error,\r\n                taskName: { error: true, msg: \"Please Enter Task Name.\" },\r\n            }));\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n    const handleSave = () => {\r\n        const { taskName, assignee, status } = state;\r\n        const valid = validate();\r\n        const payload = {\r\n            taskName,\r\n            assignee,\r\n            status,\r\n            reporter: username,\r\n            created: getData ? getData.created : getDate(),\r\n            updated: getDate(),\r\n        }\r\n        if (valid) {\r\n            fetch(`${proxy}/saveData${getData ? `/${getData.id}` : ''}`, {\r\n                method: getData ? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(payload)\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    alert(getData?\"Task Updated Successfully\":\"Task Created Successfully\");\r\n                    listAPICall();\r\n                    closeBtnFuc();\r\n                })\r\n                .catch(error => alert(\"something went wrong!\"));\r\n        }\r\n    }\r\n    return (\r\n        <section>\r\n            <h4>{actionType ? \"Create\" : \"Update\"} Task</h4>\r\n            <form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Input\r\n                            label=\"Task Name\"\r\n                            type=\"Text\"\r\n                            name=\"taskName\"\r\n                            error={error.taskName.error}\r\n                            errorMessage={error.taskName.msg}\r\n                            // customClassName=\"form-control\"\r\n                            id=\"taskName\"\r\n                            placeholder=\"Enter Task Name\"\r\n                            value={state.taskName}\r\n                            onChange={(e) => handleOnChange(\"taskName\", e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <CustomDropDown\r\n                            label=\"Assignee\"\r\n                            value={state.assignee}\r\n                            option={assigneeOption}\r\n                            onChange={(e) => handleOnDropChange(\"assignee\", e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <CustomDropDown\r\n                            label=\"Status\"\r\n                            value={state.status}\r\n                            option={statusOption}\r\n                            onChange={(e) => handleOnDropChange(\"status\", e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"btn_Cover\">\r\n                    <Button onClick={handleSave}>Save</Button>\r\n                    <Button onClick={closeBtnFuc}>Cancel</Button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateTask;","import React from \"react\"\r\nimport { Modal, ModalHeader } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nconst CustomModal = (props) => {\r\n    const {\r\n        modalOpen,\r\n        closeBtn,\r\n        modalCustomClass,\r\n        modalBody,\r\n        closeBtnFuc,\r\n        size,\r\n      } = props;\r\n    return (\r\n        <Modal\r\n            show={modalOpen}\r\n            centered\r\n            dialogClassName={modalCustomClass}\r\n            animation={true}\r\n            size={size}\r\n            id={\"modelID\"}\r\n            backdrop=\"static\"\r\n        >\r\n      {closeBtn && <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={() => closeBtnFuc()}>X</button>}\r\n      <Modal.Body>{modalBody(props)}</Modal.Body>\r\n    </Modal>\r\n    )\r\n}\r\nexport default CustomModal;","import React, { useEffect, useState } from \"react\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport './style.css';\r\nconst CustomTable = (props) => {\r\n    const { columns, data, btnData, isSearch } = props;\r\n    const [searchVal, setSearchVal] = useState(\"\");\r\n    const [tableData, setTableData] = useState([]);\r\n    useEffect(() => {\r\n        setTableData(data);\r\n    }, [data]);\r\n    const handleSearch = () => {\r\n        setTableData(data.filter((data) => {\r\n            return data.taskName.toLowerCase().includes(searchVal.toLowerCase());\r\n        }))\r\n    }\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            handleSearch();\r\n        }\r\n    }\r\n    const handleKeyBackSpace = (evant) => {\r\n        if (!searchVal) {\r\n            setTableData(data);\r\n        }\r\n    }\r\n    return (\r\n        <section id=\"customTable\">\r\n            <ul>\r\n                {btnData?.map((data, index) => (\r\n                    <li key={index}>\r\n                        <Button onClick={() => data.handleonClick()}>{data.text}</Button>\r\n                    </li>\r\n                ))}\r\n                {isSearch &&\r\n                    <li>\r\n                        <InputGroup className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                placeholder=\"Search\"\r\n                                value={searchVal}\r\n                                onChange={(e) => setSearchVal(e.target.value)}\r\n                                onKeyDown={handleKeyPress}\r\n                                onKeyUp={handleKeyBackSpace}\r\n                            />\r\n                            {/* <Button variant=\"outline-secondary\" id=\"button-addon2\" onClick={handleSearch}>\r\n                            Search\r\n                            </Button> */}\r\n                        </InputGroup>\r\n                    </li>\r\n                }\r\n            </ul>\r\n            <div className=\"responsive_Table\">\r\n                <Table striped=\"columns\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Sl.No</th>\r\n                            {columns?.map((headers, columnIndex) => {\r\n                                return (\r\n                                    <th key={columnIndex}>{headers.Header}</th>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableData.length > 0 ? (\r\n                            tableData?.map((rowData, rowIndex) => (\r\n                                <tr key={rowIndex}>\r\n                                    <td>{rowIndex + 1}</td>\r\n                                    {columns?.map((columnData, columnIndex) => (\r\n                                        <td key={columnIndex}>\r\n                                            {columnData.Cell\r\n                                                ? columnData.Cell(\r\n                                                    { value: rowData[columnData.accessor], row: rowData },\r\n                                                    rowData\r\n                                                )\r\n                                                : rowData[columnData.accessor] || '-'}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))\r\n                        ) : (\r\n                            <tr>\r\n                                <td colSpan={columns.length + 1} className=\"noDataMsg\">No data available</td>\r\n                            </tr>\r\n                        )}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default CustomTable;","import React, { useEffect, useState } from \"react\";\r\nimport CreateTask from \"./createNew.js\";\r\nimport CustomModal from \"../Component/Modal/modal.js\";\r\nimport CustomTable from \"../Component/Table/table.js\";\r\nimport TopNavigation from \"./navigation.js\";\r\nimport { FiEdit, FiTrash2 } from \"react-icons/fi\";\r\nconst TaskTable = () => {\r\n    const packageJson = require('../../package.json');\r\n    const proxy = packageJson.proxy;\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [tableData, setTableData] = useState([]);\r\n    const [action, setAction] = useState(true);\r\n    const [getData, setGetData] = useState({});\r\n    useEffect(() => {\r\n        listAPICall();\r\n    }, []);\r\n    const listAPICall = () => {\r\n        fetch(`${proxy}/saveData`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => setTableData(data))\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }\r\n    const handleCreateNew = (id, row) => {\r\n        setOpenPopup(true);\r\n        setGetData(row);\r\n\r\n        setAction(id ? false : true);\r\n    }\r\n    const handleModalBody = () => {\r\n        return (\r\n            <CreateTask closeBtnFuc={handleCloseModal} actionType={action} getData={getData} listAPICall={listAPICall} />\r\n        )\r\n    }\r\n    const handleCloseModal = () => {\r\n        setOpenPopup(false);\r\n    }\r\n    const handleDelete = (id) => {\r\n        fetch(`${proxy}/saveData/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(() => {\r\n                alert(\"Task Deleted Successfully\")\r\n                listAPICall();\r\n            })\r\n            .catch(error => alert(\"something went wrong!\"));\r\n\r\n    }\r\n    const btnData = [\r\n        {\r\n            text: \"Create New\",\r\n            handleonClick: handleCreateNew,\r\n            className: \"solid-btn\",\r\n        },\r\n    ];\r\n    const tableRows = [{\r\n        Header: \"Task Name\",\r\n        accessor: \"taskName\",\r\n        Cell: ({ value, row }) => {\r\n            return (\r\n\r\n                value ? value : \"-\"\r\n            );\r\n        },\r\n    },\r\n    {\r\n        Header: \"Assignee\",\r\n        accessor: \"assignee\",\r\n        Cell: ({ value, row }) => {\r\n            return (\r\n                value ? value : \"-\"\r\n            );\r\n        },\r\n    },\r\n    {\r\n        Header: \"Reporter\",\r\n        accessor: \"reporter\",\r\n        Cell: ({ value, row }) => {\r\n            return (\r\n                value ? value : \"-\"\r\n            );\r\n        },\r\n    },\r\n    {\r\n        Header: \"Created\",\r\n        accessor: \"created\",\r\n        Cell: ({ value, row }) => {\r\n            return (\r\n                value ? value : \"-\"\r\n            );\r\n        },\r\n    },\r\n    {\r\n        Header: \"Updated\",\r\n        accessor: \"updated\",\r\n        Cell: ({ value, row }) => {\r\n            return (\r\n                value ? value : \"-\"\r\n            );\r\n        },\r\n    },\r\n    {\r\n        Header: \"Status\",\r\n        accessor: \"status\",\r\n        Cell: ({ value, row }) => {\r\n            return (\r\n                value ? value : \"-\"\r\n            );\r\n        },\r\n    },\r\n    {\r\n        Header: \"Actions\",\r\n        Cell: ({ value, row }) => {\r\n            return (\r\n                <div className=\"action_div\">\r\n                    <div className=\"actcol\">\r\n                        <a title=\"Edit\" >\r\n                            <FiEdit\r\n                                className=\"edit-icon\"\r\n                                onClick={() => { handleCreateNew(row.id, row) }}\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"actcol\">\r\n                        <a title=\"Delete\" >\r\n                            <FiTrash2\r\n                                className=\"delete-icon\"\r\n                                onClick={() => { handleDelete(row.id) }}\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            );\r\n        },\r\n    },\r\n    ]\r\n    const statusOrder = [\"Pending\", \"In Progress\", \"Completed\"];\r\n    tableData.sort((a, b) => {\r\n        return statusOrder.indexOf(a.status) - statusOrder.indexOf(b.status);\r\n    });\r\n    return (\r\n        <section className=\"wrapper\">\r\n            <div className=\"register_container\">\r\n                <div className=\"profileCard\">\r\n                    <h2>Task Management</h2>\r\n                    <CustomTable\r\n                        columns={tableRows}\r\n                        data={tableData}\r\n                        btnData={btnData}\r\n                        isSearch={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <CustomModal\r\n                modalOpen={openPopup}\r\n                modalBody={() => handleModalBody()}\r\n                closeBtn={true}\r\n                closeBtnFuc={() => handleCloseModal()}\r\n                size={\"lg\"}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TaskTable;"],"names":["getDate","currentDate","Date","day","String","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","concat","allowNumericOnly","e","code","charCode","keyCode","preventDefault","statusOption","registerInput","name","lable","type","props","label","option","id","value","onChange","customlabelClassName","_jsxs","className","children","_jsx","Form","Select","map","data","optionIndex","_assigneeOption$","_statusOption$","proxy","require","closeBtnFuc","actionType","getData","listAPICall","username","JSON","parse","localStorage","getItem","registerUser","assigneeOption","state","setState","useState","error","setError","msg","console","log","useEffect","prevState","_objectSpread","taskName","assignee","status","handleOnDropChange","Input","errorMessage","placeholder","handleOnChange","target","CustomDropDown","Button","onClick","handleSave","valid","validate","payload","reporter","created","updated","fetch","method","headers","body","stringify","then","response","json","alert","catch","modalOpen","closeBtn","modalCustomClass","modalBody","size","Modal","show","centered","dialogClassName","animation","backdrop","Body","columns","btnData","isSearch","searchVal","setSearchVal","tableData","setTableData","index","handleonClick","text","InputGroup","onKeyDown","event","key","filter","toLowerCase","includes","onKeyUp","evant","Table","striped","columnIndex","Header","length","rowData","rowIndex","columnData","Cell","accessor","row","colSpan","TaskTable","openPopup","setOpenPopup","action","setAction","setGetData","handleCreateNew","handleCloseModal","tableRows","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","title","FiEdit","FiTrash2","statusOrder","sort","a","b","indexOf","CustomTable","CustomModal","CreateTask"],"sourceRoot":""}